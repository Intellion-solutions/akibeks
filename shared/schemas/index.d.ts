import { z } from 'zod';
export declare const userSchema: z.ZodObject<{
    id: z.ZodString;
    email: z.ZodString;
    firstName: z.ZodString;
    lastName: z.ZodString;
    role: z.ZodEnum<["admin", "user", "client", "employee"]>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    isEmailVerified: z.ZodDefault<z.ZodBoolean>;
    phoneNumber: z.ZodOptional<z.ZodString>;
    kraPin: z.ZodOptional<z.ZodString>;
    idNumber: z.ZodOptional<z.ZodString>;
    county: z.ZodOptional<z.ZodString>;
    profileImage: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    role: "admin" | "user" | "client" | "employee";
    isActive: boolean;
    isEmailVerified: boolean;
    createdAt: string;
    updatedAt: string;
    phoneNumber?: string | undefined;
    kraPin?: string | undefined;
    idNumber?: string | undefined;
    county?: string | undefined;
    profileImage?: string | undefined;
}, {
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    role: "admin" | "user" | "client" | "employee";
    createdAt: string;
    updatedAt: string;
    isActive?: boolean | undefined;
    isEmailVerified?: boolean | undefined;
    phoneNumber?: string | undefined;
    kraPin?: string | undefined;
    idNumber?: string | undefined;
    county?: string | undefined;
    profileImage?: string | undefined;
}>;
export declare const createUserSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    email: z.ZodString;
    firstName: z.ZodString;
    lastName: z.ZodString;
    role: z.ZodEnum<["admin", "user", "client", "employee"]>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    isEmailVerified: z.ZodDefault<z.ZodBoolean>;
    phoneNumber: z.ZodOptional<z.ZodString>;
    kraPin: z.ZodOptional<z.ZodString>;
    idNumber: z.ZodOptional<z.ZodString>;
    county: z.ZodOptional<z.ZodString>;
    profileImage: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt"> & {
    password: z.ZodString;
}, "strip", z.ZodTypeAny, {
    email: string;
    firstName: string;
    lastName: string;
    role: "admin" | "user" | "client" | "employee";
    isActive: boolean;
    isEmailVerified: boolean;
    password: string;
    phoneNumber?: string | undefined;
    kraPin?: string | undefined;
    idNumber?: string | undefined;
    county?: string | undefined;
    profileImage?: string | undefined;
}, {
    email: string;
    firstName: string;
    lastName: string;
    role: "admin" | "user" | "client" | "employee";
    password: string;
    isActive?: boolean | undefined;
    isEmailVerified?: boolean | undefined;
    phoneNumber?: string | undefined;
    kraPin?: string | undefined;
    idNumber?: string | undefined;
    county?: string | undefined;
    profileImage?: string | undefined;
}>;
export declare const updateUserSchema: z.ZodObject<Omit<{
    email: z.ZodOptional<z.ZodString>;
    firstName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodOptional<z.ZodString>;
    role: z.ZodOptional<z.ZodEnum<["admin", "user", "client", "employee"]>>;
    isActive: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    isEmailVerified: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    phoneNumber: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    kraPin: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    idNumber: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    county: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    profileImage: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    password: z.ZodOptional<z.ZodString>;
}, "password">, "strip", z.ZodTypeAny, {
    email?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    role?: "admin" | "user" | "client" | "employee" | undefined;
    isActive?: boolean | undefined;
    isEmailVerified?: boolean | undefined;
    phoneNumber?: string | undefined;
    kraPin?: string | undefined;
    idNumber?: string | undefined;
    county?: string | undefined;
    profileImage?: string | undefined;
}, {
    email?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    role?: "admin" | "user" | "client" | "employee" | undefined;
    isActive?: boolean | undefined;
    isEmailVerified?: boolean | undefined;
    phoneNumber?: string | undefined;
    kraPin?: string | undefined;
    idNumber?: string | undefined;
    county?: string | undefined;
    profileImage?: string | undefined;
}>;
export declare const projectSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    status: z.ZodEnum<["planning", "in_progress", "completed", "on_hold"]>;
    priority: z.ZodEnum<["low", "medium", "high", "urgent"]>;
    startDate: z.ZodString;
    estimatedEndDate: z.ZodString;
    actualEndDate: z.ZodOptional<z.ZodString>;
    budget: z.ZodNumber;
    clientId: z.ZodString;
    assignedToId: z.ZodString;
    progress: z.ZodNumber;
    location: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "planning" | "in_progress" | "completed" | "on_hold";
    createdAt: string;
    updatedAt: string;
    title: string;
    description: string;
    priority: "low" | "medium" | "high" | "urgent";
    startDate: string;
    estimatedEndDate: string;
    budget: number;
    clientId: string;
    assignedToId: string;
    progress: number;
    actualEndDate?: string | undefined;
    location?: string | undefined;
    tags?: string[] | undefined;
}, {
    id: string;
    status: "planning" | "in_progress" | "completed" | "on_hold";
    createdAt: string;
    updatedAt: string;
    title: string;
    description: string;
    priority: "low" | "medium" | "high" | "urgent";
    startDate: string;
    estimatedEndDate: string;
    budget: number;
    clientId: string;
    assignedToId: string;
    progress: number;
    actualEndDate?: string | undefined;
    location?: string | undefined;
    tags?: string[] | undefined;
}>;
export declare const createProjectSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    status: z.ZodEnum<["planning", "in_progress", "completed", "on_hold"]>;
    priority: z.ZodEnum<["low", "medium", "high", "urgent"]>;
    startDate: z.ZodString;
    estimatedEndDate: z.ZodString;
    actualEndDate: z.ZodOptional<z.ZodString>;
    budget: z.ZodNumber;
    clientId: z.ZodString;
    assignedToId: z.ZodString;
    progress: z.ZodNumber;
    location: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    status: "planning" | "in_progress" | "completed" | "on_hold";
    title: string;
    description: string;
    priority: "low" | "medium" | "high" | "urgent";
    startDate: string;
    estimatedEndDate: string;
    budget: number;
    clientId: string;
    assignedToId: string;
    progress: number;
    actualEndDate?: string | undefined;
    location?: string | undefined;
    tags?: string[] | undefined;
}, {
    status: "planning" | "in_progress" | "completed" | "on_hold";
    title: string;
    description: string;
    priority: "low" | "medium" | "high" | "urgent";
    startDate: string;
    estimatedEndDate: string;
    budget: number;
    clientId: string;
    assignedToId: string;
    progress: number;
    actualEndDate?: string | undefined;
    location?: string | undefined;
    tags?: string[] | undefined;
}>;
export declare const updateProjectSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodEnum<["planning", "in_progress", "completed", "on_hold"]>>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    priority: z.ZodOptional<z.ZodEnum<["low", "medium", "high", "urgent"]>>;
    startDate: z.ZodOptional<z.ZodString>;
    estimatedEndDate: z.ZodOptional<z.ZodString>;
    actualEndDate: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    budget: z.ZodOptional<z.ZodNumber>;
    clientId: z.ZodOptional<z.ZodString>;
    assignedToId: z.ZodOptional<z.ZodString>;
    progress: z.ZodOptional<z.ZodNumber>;
    location: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    tags: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    status?: "planning" | "in_progress" | "completed" | "on_hold" | undefined;
    title?: string | undefined;
    description?: string | undefined;
    priority?: "low" | "medium" | "high" | "urgent" | undefined;
    startDate?: string | undefined;
    estimatedEndDate?: string | undefined;
    actualEndDate?: string | undefined;
    budget?: number | undefined;
    clientId?: string | undefined;
    assignedToId?: string | undefined;
    progress?: number | undefined;
    location?: string | undefined;
    tags?: string[] | undefined;
}, {
    status?: "planning" | "in_progress" | "completed" | "on_hold" | undefined;
    title?: string | undefined;
    description?: string | undefined;
    priority?: "low" | "medium" | "high" | "urgent" | undefined;
    startDate?: string | undefined;
    estimatedEndDate?: string | undefined;
    actualEndDate?: string | undefined;
    budget?: number | undefined;
    clientId?: string | undefined;
    assignedToId?: string | undefined;
    progress?: number | undefined;
    location?: string | undefined;
    tags?: string[] | undefined;
}>;
export declare const serviceSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    category: z.ZodEnum<["design", "construction", "consultation", "maintenance"]>;
    price: z.ZodNumber;
    duration: z.ZodString;
    isActive: z.ZodDefault<z.ZodBoolean>;
    features: z.ZodArray<z.ZodString, "many">;
    requirements: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    deliverables: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    description: string;
    name: string;
    category: "design" | "construction" | "consultation" | "maintenance";
    price: number;
    duration: string;
    features: string[];
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
}, {
    id: string;
    createdAt: string;
    updatedAt: string;
    description: string;
    name: string;
    category: "design" | "construction" | "consultation" | "maintenance";
    price: number;
    duration: string;
    features: string[];
    isActive?: boolean | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
}>;
export declare const createServiceSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    category: z.ZodEnum<["design", "construction", "consultation", "maintenance"]>;
    price: z.ZodNumber;
    duration: z.ZodString;
    isActive: z.ZodDefault<z.ZodBoolean>;
    features: z.ZodArray<z.ZodString, "many">;
    requirements: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    deliverables: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    isActive: boolean;
    description: string;
    name: string;
    category: "design" | "construction" | "consultation" | "maintenance";
    price: number;
    duration: string;
    features: string[];
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
}, {
    description: string;
    name: string;
    category: "design" | "construction" | "consultation" | "maintenance";
    price: number;
    duration: string;
    features: string[];
    isActive?: boolean | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
}>;
export declare const updateServiceSchema: z.ZodObject<{
    isActive: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    description: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    category: z.ZodOptional<z.ZodEnum<["design", "construction", "consultation", "maintenance"]>>;
    price: z.ZodOptional<z.ZodNumber>;
    duration: z.ZodOptional<z.ZodString>;
    features: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    requirements: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
    deliverables: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    isActive?: boolean | undefined;
    description?: string | undefined;
    name?: string | undefined;
    category?: "design" | "construction" | "consultation" | "maintenance" | undefined;
    price?: number | undefined;
    duration?: string | undefined;
    features?: string[] | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
}, {
    isActive?: boolean | undefined;
    description?: string | undefined;
    name?: string | undefined;
    category?: "design" | "construction" | "consultation" | "maintenance" | undefined;
    price?: number | undefined;
    duration?: string | undefined;
    features?: string[] | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
}>;
export declare const contactSubmissionSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    email: z.ZodString;
    phoneNumber: z.ZodOptional<z.ZodString>;
    company: z.ZodOptional<z.ZodString>;
    serviceInterest: z.ZodOptional<z.ZodString>;
    message: z.ZodString;
    source: z.ZodDefault<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["new", "contacted", "qualified", "converted", "closed"]>>;
    ipAddress: z.ZodOptional<z.ZodString>;
    userAgent: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    email: string;
    status: "new" | "contacted" | "qualified" | "converted" | "closed";
    message: string;
    createdAt: string;
    updatedAt: string;
    name: string;
    source: string;
    phoneNumber?: string | undefined;
    company?: string | undefined;
    serviceInterest?: string | undefined;
    ipAddress?: string | undefined;
    userAgent?: string | undefined;
}, {
    id: string;
    email: string;
    message: string;
    createdAt: string;
    updatedAt: string;
    name: string;
    status?: "new" | "contacted" | "qualified" | "converted" | "closed" | undefined;
    phoneNumber?: string | undefined;
    company?: string | undefined;
    serviceInterest?: string | undefined;
    source?: string | undefined;
    ipAddress?: string | undefined;
    userAgent?: string | undefined;
}>;
export declare const createContactSubmissionSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    name: z.ZodString;
    email: z.ZodString;
    phoneNumber: z.ZodOptional<z.ZodString>;
    company: z.ZodOptional<z.ZodString>;
    serviceInterest: z.ZodOptional<z.ZodString>;
    message: z.ZodString;
    source: z.ZodDefault<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["new", "contacted", "qualified", "converted", "closed"]>>;
    ipAddress: z.ZodOptional<z.ZodString>;
    userAgent: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "status" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    email: string;
    message: string;
    name: string;
    source: string;
    phoneNumber?: string | undefined;
    company?: string | undefined;
    serviceInterest?: string | undefined;
    ipAddress?: string | undefined;
    userAgent?: string | undefined;
}, {
    email: string;
    message: string;
    name: string;
    phoneNumber?: string | undefined;
    company?: string | undefined;
    serviceInterest?: string | undefined;
    source?: string | undefined;
    ipAddress?: string | undefined;
    userAgent?: string | undefined;
}>;
export declare const testimonialSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
    company: z.ZodOptional<z.ZodString>;
    position: z.ZodOptional<z.ZodString>;
    message: z.ZodString;
    rating: z.ZodNumber;
    projectType: z.ZodOptional<z.ZodString>;
    location: z.ZodOptional<z.ZodString>;
    imageUrl: z.ZodOptional<z.ZodString>;
    approved: z.ZodDefault<z.ZodBoolean>;
    featured: z.ZodDefault<z.ZodBoolean>;
    displayOrder: z.ZodDefault<z.ZodNumber>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    message: string;
    createdAt: string;
    updatedAt: string;
    name: string;
    rating: number;
    approved: boolean;
    featured: boolean;
    displayOrder: number;
    email?: string | undefined;
    location?: string | undefined;
    company?: string | undefined;
    position?: string | undefined;
    projectType?: string | undefined;
    imageUrl?: string | undefined;
}, {
    id: string;
    message: string;
    createdAt: string;
    updatedAt: string;
    name: string;
    rating: number;
    email?: string | undefined;
    location?: string | undefined;
    company?: string | undefined;
    position?: string | undefined;
    projectType?: string | undefined;
    imageUrl?: string | undefined;
    approved?: boolean | undefined;
    featured?: boolean | undefined;
    displayOrder?: number | undefined;
}>;
export declare const createTestimonialSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
    company: z.ZodOptional<z.ZodString>;
    position: z.ZodOptional<z.ZodString>;
    message: z.ZodString;
    rating: z.ZodNumber;
    projectType: z.ZodOptional<z.ZodString>;
    location: z.ZodOptional<z.ZodString>;
    imageUrl: z.ZodOptional<z.ZodString>;
    approved: z.ZodDefault<z.ZodBoolean>;
    featured: z.ZodDefault<z.ZodBoolean>;
    displayOrder: z.ZodDefault<z.ZodNumber>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    message: string;
    name: string;
    rating: number;
    approved: boolean;
    featured: boolean;
    displayOrder: number;
    email?: string | undefined;
    location?: string | undefined;
    company?: string | undefined;
    position?: string | undefined;
    projectType?: string | undefined;
    imageUrl?: string | undefined;
}, {
    message: string;
    name: string;
    rating: number;
    email?: string | undefined;
    location?: string | undefined;
    company?: string | undefined;
    position?: string | undefined;
    projectType?: string | undefined;
    imageUrl?: string | undefined;
    approved?: boolean | undefined;
    featured?: boolean | undefined;
    displayOrder?: number | undefined;
}>;
export declare const updateTestimonialSchema: z.ZodObject<{
    email: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    message: z.ZodOptional<z.ZodString>;
    location: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    name: z.ZodOptional<z.ZodString>;
    company: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    position: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    rating: z.ZodOptional<z.ZodNumber>;
    projectType: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    imageUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    approved: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    featured: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    displayOrder: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    email?: string | undefined;
    message?: string | undefined;
    location?: string | undefined;
    name?: string | undefined;
    company?: string | undefined;
    position?: string | undefined;
    rating?: number | undefined;
    projectType?: string | undefined;
    imageUrl?: string | undefined;
    approved?: boolean | undefined;
    featured?: boolean | undefined;
    displayOrder?: number | undefined;
}, {
    email?: string | undefined;
    message?: string | undefined;
    location?: string | undefined;
    name?: string | undefined;
    company?: string | undefined;
    position?: string | undefined;
    rating?: number | undefined;
    projectType?: string | undefined;
    imageUrl?: string | undefined;
    approved?: boolean | undefined;
    featured?: boolean | undefined;
    displayOrder?: number | undefined;
}>;
export declare const seoConfigurationSchema: z.ZodObject<{
    id: z.ZodString;
    pageUrl: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    keywords: z.ZodArray<z.ZodString, "many">;
    ogTitle: z.ZodOptional<z.ZodString>;
    ogDescription: z.ZodOptional<z.ZodString>;
    ogImage: z.ZodOptional<z.ZodString>;
    canonicalUrl: z.ZodOptional<z.ZodString>;
    robotsDirective: z.ZodDefault<z.ZodString>;
    structuredData: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    title: string;
    description: string;
    pageUrl: string;
    keywords: string[];
    robotsDirective: string;
    ogTitle?: string | undefined;
    ogDescription?: string | undefined;
    ogImage?: string | undefined;
    canonicalUrl?: string | undefined;
    structuredData?: Record<string, any> | undefined;
}, {
    id: string;
    createdAt: string;
    updatedAt: string;
    title: string;
    description: string;
    pageUrl: string;
    keywords: string[];
    isActive?: boolean | undefined;
    ogTitle?: string | undefined;
    ogDescription?: string | undefined;
    ogImage?: string | undefined;
    canonicalUrl?: string | undefined;
    robotsDirective?: string | undefined;
    structuredData?: Record<string, any> | undefined;
}>;
export declare const createSEOConfigurationSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    pageUrl: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    keywords: z.ZodArray<z.ZodString, "many">;
    ogTitle: z.ZodOptional<z.ZodString>;
    ogDescription: z.ZodOptional<z.ZodString>;
    ogImage: z.ZodOptional<z.ZodString>;
    canonicalUrl: z.ZodOptional<z.ZodString>;
    robotsDirective: z.ZodDefault<z.ZodString>;
    structuredData: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    isActive: boolean;
    title: string;
    description: string;
    pageUrl: string;
    keywords: string[];
    robotsDirective: string;
    ogTitle?: string | undefined;
    ogDescription?: string | undefined;
    ogImage?: string | undefined;
    canonicalUrl?: string | undefined;
    structuredData?: Record<string, any> | undefined;
}, {
    title: string;
    description: string;
    pageUrl: string;
    keywords: string[];
    isActive?: boolean | undefined;
    ogTitle?: string | undefined;
    ogDescription?: string | undefined;
    ogImage?: string | undefined;
    canonicalUrl?: string | undefined;
    robotsDirective?: string | undefined;
    structuredData?: Record<string, any> | undefined;
}>;
export declare const updateSEOConfigurationSchema: z.ZodObject<{
    isActive: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    pageUrl: z.ZodOptional<z.ZodString>;
    keywords: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    ogTitle: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    ogDescription: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    ogImage: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    canonicalUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    robotsDirective: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    structuredData: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>>;
}, "strip", z.ZodTypeAny, {
    isActive?: boolean | undefined;
    title?: string | undefined;
    description?: string | undefined;
    pageUrl?: string | undefined;
    keywords?: string[] | undefined;
    ogTitle?: string | undefined;
    ogDescription?: string | undefined;
    ogImage?: string | undefined;
    canonicalUrl?: string | undefined;
    robotsDirective?: string | undefined;
    structuredData?: Record<string, any> | undefined;
}, {
    isActive?: boolean | undefined;
    title?: string | undefined;
    description?: string | undefined;
    pageUrl?: string | undefined;
    keywords?: string[] | undefined;
    ogTitle?: string | undefined;
    ogDescription?: string | undefined;
    ogImage?: string | undefined;
    canonicalUrl?: string | undefined;
    robotsDirective?: string | undefined;
    structuredData?: Record<string, any> | undefined;
}>;
export declare const emailSchema: z.ZodObject<{
    to: z.ZodString;
    subject: z.ZodString;
    message: z.ZodString;
    from: z.ZodOptional<z.ZodString>;
    cc: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    bcc: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    attachments: z.ZodOptional<z.ZodArray<z.ZodObject<{
        filename: z.ZodString;
        content: z.ZodString;
        contentType: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        filename: string;
        content: string;
        contentType: string;
    }, {
        filename: string;
        content: string;
        contentType: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    message: string;
    to: string;
    subject: string;
    from?: string | undefined;
    cc?: string[] | undefined;
    bcc?: string[] | undefined;
    attachments?: {
        filename: string;
        content: string;
        contentType: string;
    }[] | undefined;
}, {
    message: string;
    to: string;
    subject: string;
    from?: string | undefined;
    cc?: string[] | undefined;
    bcc?: string[] | undefined;
    attachments?: {
        filename: string;
        content: string;
        contentType: string;
    }[] | undefined;
}>;
export declare const emailTemplateSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    subject: z.ZodString;
    htmlContent: z.ZodString;
    textContent: z.ZodString;
    variables: z.ZodArray<z.ZodString, "many">;
    category: z.ZodEnum<["welcome", "notification", "invoice", "quotation", "alert", "general"]>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
    name: string;
    category: "welcome" | "notification" | "invoice" | "quotation" | "alert" | "general";
    subject: string;
    htmlContent: string;
    textContent: string;
    variables: string[];
}, {
    id: string;
    createdAt: string;
    updatedAt: string;
    name: string;
    category: "welcome" | "notification" | "invoice" | "quotation" | "alert" | "general";
    subject: string;
    htmlContent: string;
    textContent: string;
    variables: string[];
    isActive?: boolean | undefined;
}>;
export declare const createEmailTemplateSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    name: z.ZodString;
    subject: z.ZodString;
    htmlContent: z.ZodString;
    textContent: z.ZodString;
    variables: z.ZodArray<z.ZodString, "many">;
    category: z.ZodEnum<["welcome", "notification", "invoice", "quotation", "alert", "general"]>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    isActive: boolean;
    name: string;
    category: "welcome" | "notification" | "invoice" | "quotation" | "alert" | "general";
    subject: string;
    htmlContent: string;
    textContent: string;
    variables: string[];
}, {
    name: string;
    category: "welcome" | "notification" | "invoice" | "quotation" | "alert" | "general";
    subject: string;
    htmlContent: string;
    textContent: string;
    variables: string[];
    isActive?: boolean | undefined;
}>;
export declare const loginSchema: z.ZodObject<{
    email: z.ZodString;
    password: z.ZodString;
}, "strip", z.ZodTypeAny, {
    email: string;
    password: string;
}, {
    email: string;
    password: string;
}>;
export declare const registerSchema: z.ZodEffects<z.ZodObject<{
    email: z.ZodString;
    password: z.ZodString;
    confirmPassword: z.ZodString;
    firstName: z.ZodString;
    lastName: z.ZodString;
    phoneNumber: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    email: string;
    firstName: string;
    lastName: string;
    password: string;
    confirmPassword: string;
    phoneNumber?: string | undefined;
}, {
    email: string;
    firstName: string;
    lastName: string;
    password: string;
    confirmPassword: string;
    phoneNumber?: string | undefined;
}>, {
    email: string;
    firstName: string;
    lastName: string;
    password: string;
    confirmPassword: string;
    phoneNumber?: string | undefined;
}, {
    email: string;
    firstName: string;
    lastName: string;
    password: string;
    confirmPassword: string;
    phoneNumber?: string | undefined;
}>;
export declare const fileUploadSchema: z.ZodObject<{
    filename: z.ZodString;
    originalname: z.ZodString;
    mimetype: z.ZodString;
    size: z.ZodNumber;
    buffer: z.ZodType<Buffer, z.ZodTypeDef, Buffer>;
}, "strip", z.ZodTypeAny, {
    filename: string;
    originalname: string;
    mimetype: string;
    size: number;
    buffer: Buffer;
}, {
    filename: string;
    originalname: string;
    mimetype: string;
    size: number;
    buffer: Buffer;
}>;
export declare const paginationSchema: z.ZodObject<{
    page: z.ZodDefault<z.ZodNumber>;
    limit: z.ZodDefault<z.ZodNumber>;
    sortBy: z.ZodOptional<z.ZodString>;
    sortOrder: z.ZodDefault<z.ZodEnum<["asc", "desc"]>>;
}, "strip", z.ZodTypeAny, {
    page: number;
    limit: number;
    sortOrder: "asc" | "desc";
    sortBy?: string | undefined;
}, {
    page?: number | undefined;
    limit?: number | undefined;
    sortBy?: string | undefined;
    sortOrder?: "asc" | "desc" | undefined;
}>;
export declare const searchSchema: z.ZodObject<{
    q: z.ZodOptional<z.ZodString>;
    category: z.ZodOptional<z.ZodString>;
    status: z.ZodOptional<z.ZodString>;
    dateFrom: z.ZodOptional<z.ZodString>;
    dateTo: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status?: string | undefined;
    category?: string | undefined;
    q?: string | undefined;
    dateFrom?: string | undefined;
    dateTo?: string | undefined;
}, {
    status?: string | undefined;
    category?: string | undefined;
    q?: string | undefined;
    dateFrom?: string | undefined;
    dateTo?: string | undefined;
}>;
export type User = z.infer<typeof userSchema>;
export type CreateUser = z.infer<typeof createUserSchema>;
export type UpdateUser = z.infer<typeof updateUserSchema>;
export type Project = z.infer<typeof projectSchema>;
export type CreateProject = z.infer<typeof createProjectSchema>;
export type UpdateProject = z.infer<typeof updateProjectSchema>;
export type Service = z.infer<typeof serviceSchema>;
export type CreateService = z.infer<typeof createServiceSchema>;
export type UpdateService = z.infer<typeof updateServiceSchema>;
export type ContactSubmission = z.infer<typeof contactSubmissionSchema>;
export type CreateContactSubmission = z.infer<typeof createContactSubmissionSchema>;
export type Testimonial = z.infer<typeof testimonialSchema>;
export type CreateTestimonial = z.infer<typeof createTestimonialSchema>;
export type UpdateTestimonial = z.infer<typeof updateTestimonialSchema>;
export type SEOConfiguration = z.infer<typeof seoConfigurationSchema>;
export type CreateSEOConfiguration = z.infer<typeof createSEOConfigurationSchema>;
export type UpdateSEOConfiguration = z.infer<typeof updateSEOConfigurationSchema>;
export type EmailData = z.infer<typeof emailSchema>;
export type EmailTemplate = z.infer<typeof emailTemplateSchema>;
export type CreateEmailTemplate = z.infer<typeof createEmailTemplateSchema>;
export type LoginData = z.infer<typeof loginSchema>;
export type RegisterData = z.infer<typeof registerSchema>;
export type FileUpload = z.infer<typeof fileUploadSchema>;
export type PaginationParams = z.infer<typeof paginationSchema>;
export type SearchParams = z.infer<typeof searchSchema>;
//# sourceMappingURL=index.d.ts.map